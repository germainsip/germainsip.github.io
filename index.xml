<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mes ressources</title>
    <link>/</link>
    <description>Recent content on Mes ressources</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Fri, 27 Mar 2020 10:57:32 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Voyage entre les Intent</title>
      <link>/post/cours/android3/</link>
      <pubDate>Fri, 27 Mar 2020 10:57:32 +0000</pubDate>
      
      <guid>/post/cours/android3/</guid>
      <description>Les Activit√©s et les Intent Nous avons vue que les vues √©taient appel√©es des activit√©s en Android. Afin d&amp;rsquo;ouvrir une nouvelle activit√© et transf√©rer des information d&amp;rsquo;une activit√© √† l&amp;rsquo;autre nous allons avoir besoin des Intent qui vont permettre de faire naviguer des informations d&amp;rsquo;une vue √† l&amp;rsquo;autre.
 vid√©o en cours d&amp;rsquo;upload
 Nous allons faire une simple application qui dans un premier temps ouvrira une deuxi√®me activit√© au clique sur un bouton et dans un deuxi√®me temps nous verrons comment envoyer un message sur la deuxi√®me activit√© puis enfin renvoyer une r√©ponse sur la premi√®re.</description>
    </item>
    
    <item>
      <title>TextView et scroll</title>
      <link>/post/cours/android2/</link>
      <pubDate>Thu, 26 Mar 2020 09:37:44 +0000</pubDate>
      
      <guid>/post/cours/android2/</guid>
      <description>Les TextView     L&amp;rsquo;application Texte d√©filant illustre le ScrollView composant d&amp;rsquo;interface utilisateur. ScrollViewest un ViewGroup qui dans cet exemple contient un TextView. Il affiche une longue page de texte (dans ce cas, une critique d&amp;rsquo;album musical) que l&amp;rsquo;utilisateur peut faire d√©filer verticalement pour lire en faisant glisser vers le haut et vers le bas. Une barre de d√©filement appara√Æt dans la marge de droite. L&amp;rsquo;application montre comment utiliser du texte format√© avec un minimum de balises HTML pour d√©finir le texte en gras ou en italique, et avec des caract√®res de nouvelle ligne pour s√©parer les paragraphes.</description>
    </item>
    
    <item>
      <title>Notre premi√®re appli Android</title>
      <link>/post/cours/android1/</link>
      <pubDate>Tue, 24 Mar 2020 08:26:26 +0000</pubDate>
      
      <guid>/post/cours/android1/</guid>
      <description>Notre premi√®re Appli Nous allons ici commencer par faire ensemble une application tr√®s simple avec un champ o√π nous remplirons du texte et qui va se reporter dans un label apr√®s avoir appuy√© sur un bouton.
    Commencez par cr√©er un projet Android dans Android Studio et nommez le tutoAnd1
Apr√®s le travail de Gradle, vous devriez obtenir l&amp;rsquo;arborescence suivante
Le layout Le layout est la vue. Vous le trouverez dans res/layout.</description>
    </item>
    
    <item>
      <title>JavaFX et sauvegarde Partie 2</title>
      <link>/post/cours/javafx2/</link>
      <pubDate>Thu, 19 Mar 2020 10:32:50 +0000</pubDate>
      
      <guid>/post/cours/javafx2/</guid>
      <description>üé• La vid√©o arrive! Juste le temps de la faire üé•
 maj: 21/03/2020
 Pr√©requis: avoir suivi la premi√®re partie JavaFX et sauvegarde Partie 1
Comme promis, nous allons d&amp;rsquo;abord utiliser JSON.simple. Le but ici est uniquement de vous montrer comment sauvegarder quelques information sur notre application, dans la prochaine partie nous les importerons.
Importons Json.simple Il faut tout d&amp;rsquo;abord importer la biblioth√®que. Dans le pom fait un ajout de d√©pendance, soit avec clique droit sur &amp;lt;dependencies&amp;gt; et Generate&amp;hellip; ou avec le raccourcit clavier puis Depedency.</description>
    </item>
    
    <item>
      <title>Installation d&#39;Android Studio</title>
      <link>/post/cours/instal_androidstudio/</link>
      <pubDate>Thu, 19 Mar 2020 10:25:49 +0000</pubDate>
      
      <guid>/post/cours/instal_androidstudio/</guid>
      <description>Android Studio, c&amp;rsquo;est quoi? L&amp;rsquo;IDE Android Studio est financ√© par Google pour le d√©veloppement sur ses plateformes Android (mobile, tablette, TV, montre, OS&amp;hellip;). Mais cet IDE est bas√© sur IntelliJ IDEA d√©velopp√© par Jetbrain. Vous pourriez donc aussi bien travailler sur IntelliJ. Je vous conseil n√©anmoins de t√©l√©charger et d&amp;rsquo;installer Android Studio que je trouve beaucoup plus stable.
T√©l√©chargement et installation pr√©requis: avoir un jdk install√© sur sa machine
Tout d&amp;rsquo;abord, il faut t√©l√©charger l&amp;rsquo;installeur sur le site developer.</description>
    </item>
    
    <item>
      <title>JavaFX et sauvegarde Partie 1</title>
      <link>/post/cours/javafx/</link>
      <pubDate>Mon, 16 Mar 2020 15:05:18 +0000</pubDate>
      
      <guid>/post/cours/javafx/</guid>
      <description>Sauvegardons des donn√©es en Json Plusieurs biblioth√®ques existent pour exploiter le Json avec Java. Je vous propose d&amp;rsquo;en essayer 2. Nous utiliserons Json.simple et Jackson. La premi√®re est tr√®s simple d&amp;rsquo;utilisation comme son nom l&amp;rsquo;indique et la deuxi√®me nous donnera plus d&amp;rsquo;outils pour la gestion de nos objets. Je prend le partie de vous montrer l&amp;rsquo;application de ces outils avec JavaFX car le bind sera particulier dans ce cas.
  Commen√ßons par l&amp;rsquo;interface graphique Cr√©ez un projet dans l&amp;rsquo;IDE de votre choix.</description>
    </item>
    
    <item>
      <title>Premier article de bienvenue</title>
      <link>/post/cours/test2/</link>
      <pubDate>Mon, 16 Mar 2020 14:21:05 +0100</pubDate>
      
      <guid>/post/cours/test2/</guid>
      <description>A l&amp;rsquo;occasion de mon t√©l√©-travail et du fameux Covid-19, j&amp;rsquo;ai d√©cid√© d&amp;rsquo;h√©berger ici quelques cours pour optimiser l&amp;rsquo;acc√®s √† mes ressources. La majorit√© des articles seront accompagn√©s de vid√©os pour que je puisse vous expliquer les choses de vive voix. Bonne lecture et bon visionnage.</description>
    </item>
    
  </channel>
</rss>